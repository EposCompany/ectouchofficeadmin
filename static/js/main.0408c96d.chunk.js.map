{"version":3,"sources":["Components/SignUp.js","Utils/Utility.js","Utils/ApiComms.js","Utils/Auth.js","Components/SignIn.js","Components/StoreDetails.js","Components/UserList.js","Components/ResultPage.js","Components/ProgressBar.js","Components/AddUser.js","Components/EditUser.js","Components/ActivateUser.js","Components/ChangePassword.js","Components/StoreList.js","Components/EditStore.js","Components/SetExpiryDate.js","Components/AllocateMemory.js","Components/LinkStoreToUser.js","Components/LooseLink.js","Components/Home.js","Utils/MyHooks.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","Utility","SaeedServerAddress","eposservicesAddress","ValidateEmail","email","test","String","toLowerCase","ValidatePhoneNumber","phone","phoneno","replace","console","log","length","baseApiAddress","myUtils","ApiComms","LoginUser","password","a","options","method","headers","Headers","url","fetch","response","json","myJson","LogoutUser","userId","AddUser","user","fname","sname","telephone","ChangePassword","userid","StoreList","StoreDetailsById","storeid","SetStoreExpiryDate","expiry","ActivateUser","activate","EditStore","store","contact","address1","address2","address3","postcode","terminals","currencysign","AllocateMemory","file","memory","LinkUserToStore","storeId","UserList","EditUser","LooseLink","Auth","Login","username","result","resultcode","accesslevel","Logout","callback","id","IsLoggedIn","useStyles","root","height","validateEmail","SignInSide","props","classes","React","useState","setUsername","setPassword","errorMsg","setErrorMsg","history","useHistory","btnSignIn_Click","res","RaiseUserLoginEvent","push","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","onKeyDown","e","keyCode","preventDefault","stopPropagation","TextField","required","fullWidth","label","name","autoComplete","autoFocus","onChange","target","value","type","Button","color","onClick","Box","mt","align","StoreDetails","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","raiseOnCloseEvent","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","StyledTableCell","withStyles","head","black","fontSize","TableCell","StyledTableRow","background","default","TableRow","table","minWidth","rows","setRows","detailsopen","setDetailsOpen","setLoading","useEffect","fetchUserList","TableContainer","Table","aria-label","TableHead","TableBody","map","row","onDoubleClick","key","scope","ResultPage","message","marginLeft","ProgressBar","CircularProgress","divStyle","setFname","setSname","setTelephone","setEmail","password1","setPassword1","setPassword2","error","setError","loading","myMessage","pathname","Fragment","justify","helperText","size","setId","validationError","setValidationError","errId","setErrId","formControl","group","activation","setActivation","setUserid","erruserid","setErrUserId","FormControl","FormLabel","RadioGroup","event","FormControlLabel","control","Radio","setUserErrId","fetchStoreList","setStoreId","setContact","setAddress1","setAddress2","setAddress3","setPostcode","setTerminals","setCurrencysign","errstoreid","setErrStoreId","errcurrency","setErrCurrency","SetExpiryDate","Date","setFullYear","getFullYear","selectedDate","setSelectedDate","errValidation","setErrValidation","format","direction","utils","DateFnsUtils","date","KeyboardButtonProps","m","plumemory","setPLUMemory","customermemory","setCustomerMemory","errPLUmemory","setErrPLUmemory","errCustomerMemory","setErrCustomerMemory","LinkStoreToUser","setUserId","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","content","contentShift","listItemList","Home","setTitle","setMessage","useRouteMatch","path","location","useLocation","retVal","find","element","split","reverse","LayTileText","AppBar","position","clsx","Toolbar","IconButton","edge","noWrap","Drawer","anchor","Divider","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","exact","localStorageKey","JSON","parse","localStorage","getItem","setValue","setItem","stringify","App","MyHooks","setUser","OnUserLogin","oUser","OnUserLogout","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0408c96d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","const Utility = {\r\n  //  SaeedServerAddress: \"http://95.145.134.197:13370\",\r\n  SaeedServerAddress: \"http://localhost:1337\",\r\n  eposservicesAddress: \"https://eposservices.co.uk\",\r\n\r\n  ValidateEmail: (email) => {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  },\r\n\r\n  ValidatePhoneNumber: (phone) => {\r\n    let phoneno = phone.replace(/[^0-9]/g, \"\");\r\n    console.log(\"jaleseh\");\r\n    console.log(phoneno.length);\r\n    return phoneno.length < 8 || phoneno.length > 12;\r\n  },\r\n};\r\n\r\nexport default Utility;\r\n","import myUtils from \"./Utility\";\r\n\r\nconst baseApiAddress = myUtils.eposservicesAddress;\r\n\r\nconst ApiComms = {\r\n  LoginUser: async function fetchLoginUser(email, password) {\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n        // Authorization:\r\n        //   \"07a460dd879652a3aef7cc1ed287a2376fd5a20dde30ecb06db210fadf5aee353df246\"\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      \"/v1/users/login/userby/email=\" +\r\n      email +\r\n      \"/password=\" +\r\n      password;\r\n\r\n    console.log(url);\r\n    var response = await fetch(url, options);\r\n    const myJson = await response.json();\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  LogoutUser: async function fetchLogoutUser(userId) {\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url = baseApiAddress + \"/v1/users/logout/userby/userid=\" + userId;\r\n\r\n    // console.log(url);\r\n    var response = await fetch(url, options);\r\n    const myJson = await response.json();\r\n    return myJson;\r\n  },\r\n\r\n  AddUser: async function PostAddUser(user) {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      \"/v1/users/add/user/fname=\" +\r\n      user.fname +\r\n      \"/sname=\" +\r\n      user.sname +\r\n      \"/telephone=\" +\r\n      user.telephone +\r\n      \"/email=\" +\r\n      user.email +\r\n      \"/password=\" +\r\n      user.password;\r\n\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  ChangePassword: async function PutChangeUserPassword(user) {\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      \"/v1/users/change/password/userid=\" +\r\n      user.userid +\r\n      \"/password=\" +\r\n      user.password;\r\n\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  StoreList: async function GetStoreList() {\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url = baseApiAddress + \"/v1/get/storelist\";\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      console.log(e);\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  StoreDetailsById: async function GetStoreDetailsById(storeid) {\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url = baseApiAddress + \"/v1/get/storedetailsbyid/storeid=\" + storeid;\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      console.log(e);\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  SetStoreExpiryDate: async function GetSetStoreExpiryDateByName(\r\n    storeid,\r\n    expiry\r\n  ) {\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      \"/v1/setup/renew/store/expiry/storeid=\" +\r\n      storeid +\r\n      \"/expiry=\" +\r\n      expiry;\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      console.log(e);\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  ActivateUser: async function PutActivateUser(userid, activate) {\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      (activate\r\n        ? \"/v1/users/activate/user/userid=\"\r\n        : \"/v1/users/inactivate/user/userid=\") +\r\n      userid;\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      console.log(e);\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  EditStore: async function PutEditStore(store) {\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      \"/v1/users/edit/store/storeid=\" +\r\n      store.storeid +\r\n      \"/contact=\" +\r\n      store.contact +\r\n      \"/address1=\" +\r\n      store.address1 +\r\n      \"/address2=\" +\r\n      store.address2 +\r\n      \"/address3=\" +\r\n      store.address3 +\r\n      \"/postcode=\" +\r\n      store.postcode +\r\n      \"/email=\" +\r\n      store.email +\r\n      \"/terminals=\" +\r\n      store.terminals +\r\n      \"/currencysign=\" +\r\n      store.currencysign;\r\n\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  AllocateMemory: async function PostAllocateMemory(file, memory, storeid) {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      \"/v1/setup/allocmemory/file=\" +\r\n      file +\r\n      \"/memory=\" +\r\n      memory +\r\n      \"/storeid=\" +\r\n      storeid;\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      console.log(e);\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  LinkUserToStore: async function PostLinkUserToStore(userId, storeId) {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      \"/v1/users/link/usertostore/userid=\" +\r\n      userId +\r\n      \"/storeid=\" +\r\n      storeId;\r\n\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      console.log(e);\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  UserList: async function GetUserList() {\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url = baseApiAddress + \"/v1/users/get/userlist\";\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      console.log(e);\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  EditUser: async function PutEditUser(userid, fname, sname, telephone) {\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      \"/v1/users/edit/user/userid=\" +\r\n      userid +\r\n      \"/fname=\" +\r\n      fname +\r\n      \"/sname=\" +\r\n      sname +\r\n      \"/telephone=\" +\r\n      telephone;\r\n\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n\r\n  LooseLink: async function DeleteLooseLink(userId, storeId) {\r\n    const options = {\r\n      method: \"DELETE\",\r\n      headers: new Headers({\r\n        \"content-type\": \"text/plain\",\r\n      }),\r\n    };\r\n\r\n    const url =\r\n      baseApiAddress +\r\n      \"/v1/users/looselink/usertostore/userid=\" +\r\n      userId +\r\n      \"/storeid=\" +\r\n      storeId;\r\n\r\n    var myJson = null;\r\n    console.log(url);\r\n    try {\r\n      var response = await fetch(url, options);\r\n      myJson = await response.json();\r\n    } catch (e) {\r\n      console.log(\"error cought\");\r\n      console.log(e);\r\n      myJson = null;\r\n    }\r\n    console.log(myJson);\r\n    return myJson;\r\n  },\r\n};\r\n\r\nexport default ApiComms;\r\n","import ApiComms from \"./ApiComms\";\r\n\r\nconst Auth = {\r\n  user: null,\r\n  async Login(username, password) {\r\n    let result = await ApiComms.LoginUser(username, password);\r\n    if (\r\n      result !== null &&\r\n      result.resultcode === 0 &&\r\n      result.result.accesslevel > 7\r\n    ) {\r\n      Auth.user = result.result;\r\n      console.log(\"logged in\");\r\n      return result.result;\r\n    } else {\r\n      console.log(\"logged out\");\r\n    }\r\n    return null;\r\n    // callback(result.result);\r\n    //return result.result;\r\n  },\r\n  async Logout(callback) {\r\n    let result = null;\r\n    if (Auth.user) {\r\n      result = await ApiComms.LogoutUser(Auth.user.id);\r\n      if (result.resultcode === 0) {\r\n        Auth.user = null;\r\n      }\r\n    }\r\n    return callback();\r\n  },\r\n  IsLoggedIn() {\r\n    return Auth.user ? true : false;\r\n  },\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Auth from \"../Utils/Auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction validateEmail(email) {\r\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport default function SignInSide(props) {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = React.useState(null);\r\n  const [password, setPassword] = React.useState(null);\r\n  //  const [usernameValidate, setUsernameValiated] = React.useState(false);\r\n  const [errorMsg, setErrorMsg] = React.useState(\"\");\r\n  //  let history = useHistory();\r\n  let history = useHistory();\r\n\r\n  async function btnSignIn_Click() {\r\n    if (validateEmail(username)) {\r\n      var res = null;\r\n      res = await Auth.Login(username, password);\r\n      console.log(res);\r\n      if (res !== null) {\r\n        console.log(\"login successful\");\r\n        props.RaiseUserLoginEvent(res);\r\n        history.push(\"/\");\r\n      } else {\r\n        console.log(\"login unsuccessful\");\r\n        setErrorMsg(\"login failed\");\r\n      }\r\n    } else {\r\n      setErrorMsg(\"User name is invalid\");\r\n    }\r\n  }\r\n\r\n  function handleEmail(e) {\r\n    setUsername(e.target.value);\r\n    // setUsernameValiated(validateEmail(e.target.value));\r\n  }\r\n\r\n  function handlePassword(e) {\r\n    //  console.log(password);\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  function keyDownHandler(e) {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      btnSignIn_Click();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={4} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onKeyDown={keyDownHandler}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={handleEmail}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handlePassword}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={btnSignIn_Click}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Box mt={5}>\r\n              {\" \"}\r\n              <Typography variant=\"body1\" color=\"textPrimary\" align=\"center\">\r\n                {errorMsg}\r\n              </Typography>\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function StoreDetails(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  //   const handleClickOpen = () => {\r\n  //     setOpen(true);\r\n  //   };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.raiseOnCloseEvent();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {/* {props.message} */}\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport StoreDetails from \"./StoreDetails\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function UserList() {\r\n  const classes = useStyles();\r\n  let [rows, setRows] = useState([]);\r\n  let [detailsopen, setDetailsOpen] = useState(false);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  async function fetchUserList() {\r\n    setLoading(true);\r\n    let res = await ApiComms.UserList();\r\n    setLoading(false);\r\n    // console.log(res);\r\n\r\n    if (res !== null && res.resultcode === 0) {\r\n      setRows(res.result);\r\n    } else {\r\n      setRows([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUserList();\r\n  }, []);\r\n\r\n  function tblRow_DoubleClick(key) {\r\n    console.log(key);\r\n    //StoreD({ message: \"har che mikhahad dele tanget begoo\" });\r\n    setDetailsOpen(true);\r\n  }\r\n\r\n  function OnStoreDetailsClose() {\r\n    setDetailsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {detailsopen && <StoreDetails raiseOnCloseEvent={OnStoreDetailsClose} />}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>User id</StyledTableCell>\r\n              <StyledTableCell>User First name</StyledTableCell>\r\n              <StyledTableCell>User Surname</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <StyledTableRow\r\n                onDoubleClick={() => tblRow_DoubleClick(row.id)}\r\n                key={row.id}\r\n              >\r\n                <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {row.id}\r\n                </StyledTableCell>\r\n                <StyledTableCell>{row.fname}</StyledTableCell>\r\n                <StyledTableCell>{row.sname}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function ResultPage(props) {\r\n  return (\r\n    <>\r\n      <Typography>\r\n        {\" \"}\r\n        \"Followings you will find the result of you actions\"{\" \"}\r\n      </Typography>\r\n\r\n      <Typography> {props.message} </Typography>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ProgressBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n      {/* <CircularProgress color=\"secondary\" /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ResultPage from \"./ResultPage\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport myUtils from \"../Utils/Utility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  divStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function AddUser() {\r\n  const classes = useStyles();\r\n  let [fname, setFname] = useState(\"\");\r\n  let [sname, setSname] = useState(\"\");\r\n  let [telephone, setTelephone] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n  let [password1, setPassword1] = useState(\"\");\r\n  let [password2, setPassword2] = useState(\"\");\r\n  let [error, setError] = useState(\" \");\r\n  let [result, setResult] = useState(\"\");\r\n  let [loading, setLoading] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const txtFname_Change = (e) => {\r\n    setFname(e.target.value);\r\n  };\r\n\r\n  const txtSname_Change = (e) => {\r\n    setSname(e.target.value);\r\n  };\r\n\r\n  const txtTelephone_Change = (e) => {\r\n    setTelephone(e.target.value);\r\n  };\r\n\r\n  const txtEmail_Change = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const txtPassword1_Change = (e) => {\r\n    setPassword1(e.target.value);\r\n  };\r\n\r\n  const txtPassword2_Change = (e) => {\r\n    setPassword2(e.target.value);\r\n  };\r\n\r\n  async function btnSubmit_Click(e) {\r\n    // api will run here and the result will be set\r\n    //  console.log(email);\r\n    if (!myUtils.ValidateEmail(email)) {\r\n      //     console.log(\"invalid email\");\r\n      setError(\"Email address is invalid\");\r\n    } else {\r\n      console.log(\"request made\");\r\n      setLoading(true);\r\n      let res = await ApiComms.AddUser({\r\n        fname: fname === \"\" ? \" \" : fname,\r\n        sname: sname === \"\" ? \" \" : sname,\r\n        telephone: telephone,\r\n        email: email,\r\n        password: password1,\r\n      });\r\n      console.log(\"sdfgssdfgs\");\r\n      setLoading(false);\r\n      console.log(\"res:::\");\r\n      console.log(res);\r\n      let myMessage = \"Failed !!!!!\";\r\n      if (res !== null && res.resultcode === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n\r\n      console.log(myMessage);\r\n    }\r\n    //setError(\"Email address is valid\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={5} justify=\"center\">\r\n        <Grid item xs={12}>\r\n          {loading && <ProgressBar />}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtFname\"\r\n            label=\"First name\"\r\n            onChange={txtFname_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtSname\"\r\n            label=\"Surname\"\r\n            onChange={txtSname_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtTelephone\"\r\n            label=\"Telephone\"\r\n            type=\"tel\"\r\n            onChange={txtTelephone_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtEmail\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            onChange={txtEmail_Change}\r\n            fullWidth\r\n            helperText=\"Also used as Username\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtPassword1\"\r\n            label=\"Password\"\r\n            onChange={txtPassword1_Change}\r\n            type=\"password\"\r\n            fullWidth\r\n            //          autoComplete=\"current-password\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtPassword2\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            onChange={txtPassword2_Change}\r\n            fullWidth\r\n            helperText=\"Type the password again\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography color=\"error\">{error}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} />\r\n        <Grid item xs={12} sm={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={btnSubmit_Click}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ResultPage from \"./ResultPage\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport myUtils from \"../Utils/Utility\";\r\n// import AlertDialog from \"../Utils/AlertsBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  divStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function EditUser() {\r\n  const classes = useStyles();\r\n  let [id, setId] = useState(0);\r\n  let [fname, setFname] = useState(\"\");\r\n  let [sname, setSname] = useState(\"\");\r\n  let [telephone, setTelephone] = useState(\"\");\r\n  let [validationError, setValidationError] = useState(\"\");\r\n  let [result, setResult] = useState(\"\");\r\n  let [loading, setLoading] = useState(false);\r\n  let history = useHistory();\r\n  let [errId, setErrId] = useState(false);\r\n\r\n  const txtFname_Change = (e) => {\r\n    setFname(e.target.value);\r\n  };\r\n\r\n  const txtSname_Change = (e) => {\r\n    setSname(e.target.value);\r\n  };\r\n\r\n  const txtTelephone_Change = (e) => {\r\n    setTelephone(e.target.value);\r\n  };\r\n\r\n  const txtId_Change = (e) => {\r\n    setId(e.target.value);\r\n    setErrId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  async function btnSubmit_Click(e) {\r\n    // api will run here and the result will be set\r\n    if (id < 1 || id > 10000) {\r\n      setValidationError(\"id is out of boundry\");\r\n    } else if (myUtils.ValidatePhoneNumber(telephone)) {\r\n      setValidationError(\"telehone number is not valid.\");\r\n    } else {\r\n      console.log(\"request made\");\r\n      setLoading(true);\r\n      let res = await ApiComms.EditUser(\r\n        id,\r\n        fname === \"\" ? \" \" : fname,\r\n        sname === \"\" ? \" \" : sname,\r\n        telephone\r\n      );\r\n      setLoading(false);\r\n      console.log(res);\r\n      let myMessage = \"Failed !!!!!\";\r\n      if (res !== null && res.resultcode === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n      console.log(myMessage);\r\n    }\r\n    //setError(\"Email address is valid\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={5} justify=\"center\">\r\n        <Grid item xs={12}>\r\n          {loading && <ProgressBar />}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            error={errId}\r\n            required\r\n            id=\"txtId\"\r\n            label=\"Customer Id\"\r\n            onChange={txtId_Change}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} />\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtFname\"\r\n            label=\"First name\"\r\n            onChange={txtFname_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtSname\"\r\n            label=\"Surname\"\r\n            onChange={txtSname_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtTelephone\"\r\n            label=\"Telephone\"\r\n            type=\"tel\"\r\n            onChange={txtTelephone_Change}\r\n            type=\"number\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} />\r\n        <Grid item xs={12}>\r\n          <Typography color=\"error\">{validationError}</Typography>\r\n          {/* <AlertDialog message={validationError} /> */}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} />\r\n        <Grid item xs={12} sm={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={btnSubmit_Click}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n}));\r\n\r\nexport default function ActivateUser() {\r\n  const classes = useStyles();\r\n  const [activation, setActivation] = React.useState(\"activate\");\r\n  const [userid, setUserid] = useState(null);\r\n  let [loading, setLoading] = useState(false);\r\n  let history = useHistory();\r\n  let [erruserid, setErrUserId] = useState(false);\r\n  let [validationError, setValidationError] = useState(\"\");\r\n\r\n  function rbActivation_Change(event) {\r\n    setActivation(event.target.value);\r\n  }\r\n\r\n  const txtUserId_Change = (e) => {\r\n    // console.log(e.target.value);\r\n    setUserid(e.target.value);\r\n    setErrUserId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  async function btnSubmit_Click() {\r\n    if (userid < 1 || userid > 10000) {\r\n      //here you validate the fields\r\n      setValidationError(\"User ID is out of range\");\r\n    } else {\r\n      setLoading(true);\r\n      let res = await ApiComms.ActivateUser(userid, activation === \"activate\");\r\n      setLoading(false);\r\n      console.log(res);\r\n      let myMessage = \"Failed !!!!!\";\r\n      if (res !== null && res.resultcode === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12}>\r\n          {loading && <ProgressBar />}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtUserId\"\r\n            label=\"User Id\"\r\n            type=\"number\"\r\n            onChange={txtUserId_Change}\r\n            fullWidth\r\n            error={erruserid}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <FormLabel component=\"legend\">User Activation</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"ActivateUser\"\r\n              name=\"ActivateUser\"\r\n              className={classes.group}\r\n              value={activation}\r\n              onChange={rbActivation_Change}\r\n            >\r\n              <FormControlLabel\r\n                value=\"activate\"\r\n                control={<Radio />}\r\n                label=\"Activate User\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"deactivate\"\r\n                control={<Radio />}\r\n                label=\"Deactivate User\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography color=\"error\">{validationError}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} />\r\n        <Grid item xs={12} sm={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={btnSubmit_Click}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ResultPage from \"./ResultPage\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  divStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nexport default function ChangePassword() {\r\n  const classes = useStyles();\r\n  let [userid, setUserid] = useState(\"\");\r\n  let [password1, setPassword1] = useState(\"\");\r\n  let [password2, setPassword2] = useState(\"\");\r\n  let [error, setError] = useState(\"\");\r\n  let history = useHistory();\r\n  let [loading, setLoading] = useState(false);\r\n  let [erruserid, setUserErrId] = useState(false);\r\n\r\n  const txtUserId_Change = (e) => {\r\n    setUserid(e.target.value);\r\n    setUserErrId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  const txtPassword1_Change = (e) => {\r\n    setPassword1(e.target.value);\r\n  };\r\n\r\n  const txtPassword2_Change = (e) => {\r\n    setPassword2(e.target.value);\r\n  };\r\n\r\n  async function btnSubmit_Click(e) {\r\n    if (userid < 1 || userid > 10000) {\r\n      // Do some validation here and if it passed then take the API call branch.\r\n      //    console.log(\"Invalid ID\");\r\n      setError(\"User ID is out of range\");\r\n    } else {\r\n      setLoading(true);\r\n      let res = await ApiComms.ChangePassword({\r\n        userid: userid,\r\n        password: password1,\r\n      });\r\n      setLoading(false);\r\n      let myMessage = \"Failed !!!!!\";\r\n      if (res !== null && res.resultcode === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n\r\n      console.log(myMessage);\r\n    }\r\n    //setError(\"Email address is valid\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={5} justify=\"center\">\r\n        <Grid item xs={12}>\r\n          {loading && <ProgressBar />}\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"txtUserId\"\r\n            label=\"User ID\"\r\n            onChange={txtUserId_Change}\r\n            fullWidth\r\n            type=\"number\"\r\n            error={erruserid}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"txtPassword1\"\r\n            label=\"Password\"\r\n            onChange={txtPassword1_Change}\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"txtPassword2\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            onChange={txtPassword2_Change}\r\n            fullWidth\r\n            helperText=\"Type the password again\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography color=\"error\">{error}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={9} />\r\n        <Grid item xs={12} sm={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={btnSubmit_Click}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport StoreDetails from \"./StoreDetails\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function StoreList() {\r\n  const classes = useStyles();\r\n  let [rows, setRows] = useState([]);\r\n  let [detailsopen, setDetailsOpen] = useState(false);\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  async function fetchStoreList() {\r\n    setLoading(true);\r\n    let res = await ApiComms.StoreList();\r\n    setLoading(false);\r\n    if (res !== null) {\r\n      setRows(res);\r\n    }\r\n  }\r\n\r\n  async function fetchStoreDetails() {\r\n    setLoading(true);\r\n    let res = await ApiComms.StoreList();\r\n    setLoading(false);\r\n    if (res !== null) {\r\n      setRows(res);\r\n    } else {\r\n      setRows([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchStoreList();\r\n  }, []);\r\n\r\n  function tblRow_DoubleClick(key) {\r\n    console.log(key);\r\n    //StoreD({ message: \"har che mikhahad dele tanget begoo\" });\r\n    setDetailsOpen(true);\r\n  }\r\n\r\n  function OnStoreDetailsClose() {\r\n    setDetailsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {detailsopen && <StoreDetails raiseOnCloseEvent={OnStoreDetailsClose} />}\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Store id</StyledTableCell>\r\n              <StyledTableCell>Store name</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <StyledTableRow\r\n                onDoubleClick={() => tblRow_DoubleClick(row.id)}\r\n                key={row.id}\r\n              >\r\n                <StyledTableCell component=\"th\" scope=\"row\">\r\n                  {row.id}\r\n                </StyledTableCell>\r\n                <StyledTableCell>{row.name}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ResultPage from \"./ResultPage\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport AlertDialog from \"../Utils/AlertsBox\";\r\nimport myUtils from \"../Utils/Utility\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  divStyle: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nfunction validateEmail(email) {\r\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport default function EditStore() {\r\n  const classes = useStyles();\r\n  let [storeid, setStoreId] = useState(\"\");\r\n  let [contact, setContact] = useState(\"\");\r\n  let [address1, setAddress1] = useState(\"\");\r\n  let [address2, setAddress2] = useState(\"\");\r\n  let [address3, setAddress3] = useState(\"\");\r\n  let [postcode, setPostcode] = useState(\"\");\r\n  let [email, setEmail] = useState(\"\");\r\n  let [terminals, setTerminals] = useState(\"\");\r\n  let [currencysign, setCurrencysign] = useState(\"\");\r\n  let [validationError, setValidationError] = useState(\"\");\r\n  let [result, setResult] = useState(\"\");\r\n  let [loading, setLoading] = useState(false);\r\n  let [errstoreid, setErrStoreId] = useState(false);\r\n  let [errcurrency, setErrCurrency] = useState(false);\r\n  let [errterminals, setErrterminals] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const txtStoreId_Change = (e) => {\r\n    setStoreId(e.target.value);\r\n    setErrStoreId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  const txtContact_Change = (e) => {\r\n    setContact(e.target.value);\r\n  };\r\n\r\n  const txtAddress1_Change = (e) => {\r\n    setAddress1(e.target.value);\r\n  };\r\n\r\n  const txtAddress2_Change = (e) => {\r\n    setAddress2(e.target.value);\r\n  };\r\n\r\n  const txtAddress3_Change = (e) => {\r\n    setAddress3(e.target.value);\r\n  };\r\n\r\n  const txtPostcode_Change = (e) => {\r\n    setPostcode(e.target.value);\r\n  };\r\n\r\n  const txtEmail_Change = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const txtTerminals_Change = (e) => {\r\n    setTerminals(e.target.value);\r\n  };\r\n\r\n  const txtCurrencysign_Change = (e) => {\r\n    setCurrencysign(e.target.value);\r\n    setErrCurrency(e.target.value.length < 1 || e.target.value.length > 4);\r\n  };\r\n\r\n  async function btnSubmit_Click(e) {\r\n    // api will run here and the result will be set\r\n    //  console.log(email);\r\n    if (storeid < 1 || storeid > 10000) {\r\n      setValidationError(\"Store ID is out of range\");\r\n    } else if (!myUtils.ValidateEmail(email)) {\r\n      //   console.log(\"invalid email\");\r\n      setValidationError(\"Email address is invalid\");\r\n    } else if (currencysign < 1 || currencysign > 4) {\r\n      setValidationError(\"Currency sign should be maximum 4 characters long\");\r\n    } else if (terminals < 1 || terminals > 24) {\r\n      setValidationError(\"Maximum allowed number for No. of terminals is 24\");\r\n    } else {\r\n      console.log(\"request made\");\r\n      setLoading(true);\r\n      let res = await ApiComms.EditStore({\r\n        storeid: storeid,\r\n        contact: contact.length <= 0 ? \" \" : contact,\r\n        address1: address1.length <= 0 ? \" \" : address1,\r\n        address2: address2.length <= 0 ? \" \" : address2,\r\n        address3: address3.length <= 0 ? \" \" : address3,\r\n        postcode: postcode.length <= 0 ? \" \" : postcode,\r\n        email: email,\r\n        terminals: terminals,\r\n        currencysign: currencysign,\r\n      });\r\n      setLoading(false);\r\n      console.log(res);\r\n      let myMessage = \"Failed !!!!!\";\r\n      if (res !== null && res.resultcode === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n\r\n      console.log(myMessage);\r\n    }\r\n    //setError(\"Email address is valid\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={5} justify=\"center\">\r\n        <Grid item xs={12}>\r\n          {loading && <ProgressBar />}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtStoreId\"\r\n            label=\"Store Id\"\r\n            type=\"number\"\r\n            onChange={txtStoreId_Change}\r\n            fullWidth\r\n            error={errstoreid}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} />\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtContact\"\r\n            label=\"Contact\"\r\n            onChange={txtContact_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtAddress1\"\r\n            label=\"Address1\"\r\n            onChange={txtAddress1_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtAddress2\"\r\n            label=\"Address2\"\r\n            onChange={txtAddress2_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtAddress3\"\r\n            label=\"Address3\"\r\n            onChange={txtAddress3_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtPostcode\"\r\n            label=\"Postcode\"\r\n            onChange={txtPostcode_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtEmail\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            onChange={txtEmail_Change}\r\n            fullWidth\r\n            helperText=\"Also used as Username\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtTerminals\"\r\n            label=\"No. of Terminals\"\r\n            type=\"number\"\r\n            onChange={txtTerminals_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            error={errcurrency}\r\n            id=\"txtCurrencysign\"\r\n            label=\"Currency Sign\"\r\n            onChange={txtCurrencysign_Change}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Typography color=\"error\">{validationError}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} />\r\n        <Grid item xs={12} sm={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={btnSubmit_Click}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import \"date-fns\";\r\nimport React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport format from \"date-fns/format\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function SetExpiryDate() {\r\n  // The first commit of Material-UI\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date(new Date().setFullYear(new Date().getFullYear() + 1))\r\n  );\r\n  const [storeid, setStoreId] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  let [errValidation, setErrValidation] = useState(\"\");\r\n  let [errId, setErrId] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    console.log(format(date, \"yyyy-MM-dd\"));\r\n  };\r\n\r\n  const txtStoreId_Change = (e) => {\r\n    //console.log(e.target.id);\r\n    setStoreId(e.target.value);\r\n    setErrId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  async function btnSubmit_Click() {\r\n    if (storeid > 10000 || storeid < 1) {\r\n      setErrValidation(\"Store ID is out of range\");\r\n    } else {\r\n      //    console.log(\"request made\");\r\n      setLoading(true);\r\n      let res = await ApiComms.SetStoreExpiryDate(\r\n        storeid,\r\n        format(selectedDate, \"yyyy-MM-dd\")\r\n      );\r\n      setLoading(false);\r\n      console.log(res);\r\n      let myMessage = \"Failed !!!!!\";\r\n\r\n      if (res !== null && res.result === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-start\"\r\n        spacing={5}\r\n      >\r\n        <Grid item xs={4}>\r\n          {loading && <ProgressBar />}\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            required\r\n            id=\"txtStoreId\"\r\n            label=\"Store Id\"\r\n            onChange={txtStoreId_Change}\r\n            fullWidth\r\n            error={errId}\r\n            type=\"number\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Date picker dialog\"\r\n                format=\"dd/MM/yyyy\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography color=\"error\">{errValidation}</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Grid container direction=\"row-reverse\">\r\n            <Grid item xs={6}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                onClick={btnSubmit_Click}\r\n                m={12}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function AllocateMemory() {\r\n  // The first commit of Material-UI\r\n  const [storeid, setStoreId] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [plumemory, setPLUMemory] = useState(\"\");\r\n  const [customermemory, setCustomerMemory] = useState(\"\");\r\n  let [validationError, setValidationError] = useState(\"\");\r\n  let [errId, setErrId] = useState(false);\r\n  let [errPLUmemory, setErrPLUmemory] = useState(false);\r\n  let [errCustomerMemory, setErrCustomerMemory] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const txtStoreId_Change = (e) => {\r\n    setStoreId(e.target.value);\r\n    setErrId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  const txtPLUMemory_Change = (e) => {\r\n    setPLUMemory(e.target.value);\r\n    setErrPLUmemory(e.target.value < 1 || e.target.value > 32500);\r\n  };\r\n\r\n  const txtCustomerMemory_Change = (e) => {\r\n    setCustomerMemory(e.target.value);\r\n    setErrCustomerMemory(e.target.value < 1 || e.target.value > 32500);\r\n  };\r\n\r\n  async function btnSubmitPLU_Click() {\r\n    if (storeid > 10000 || storeid < 1) {\r\n      setValidationError(\"Store ID is out of range\");\r\n    } else if (plumemory < 1 || plumemory > 32500) {\r\n      setValidationError(\"PLU Memory is out of range\");\r\n    } else {\r\n      setLoading(true);\r\n      let res = await ApiComms.AllocateMemory(5, plumemory, storeid);\r\n      setLoading(false);\r\n      console.log(res);\r\n      let myMessage = \"Filed !!!!!\";\r\n\r\n      if (res !== null && res.result === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function btnSubmitCustomer_Click() {\r\n    if (storeid > 10000 || storeid < 1) {\r\n      setValidationError(\"Store ID is out of range\");\r\n    } else if (customermemory < 1 || customermemory > 32500) {\r\n      setValidationError(\"Customer Memory is out of range\");\r\n    } else {\r\n      setLoading(true);\r\n      let res = await ApiComms.AllocateMemory(26, customermemory, storeid);\r\n      setLoading(false);\r\n      console.log(res);\r\n      let myMessage = \"Filed !!!!!\";\r\n\r\n      if (res !== null && res.result === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n        spacing={8}\r\n      >\r\n        <Grid item xs={12}>\r\n          {loading && <ProgressBar />}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtStoreId\"\r\n            label=\"Store Id\"\r\n            onChange={txtStoreId_Change}\r\n            type=\"number\"\r\n            error={errId}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6} />\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtPLUMemory\"\r\n            label=\"PLU Memory\"\r\n            type=\"number\"\r\n            error={errPLUmemory}\r\n            onChange={txtPLUMemory_Change}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            required\r\n            id=\"txtCustomerMemory\"\r\n            label=\"Customer Memory\"\r\n            type=\"number\"\r\n            error={errCustomerMemory}\r\n            onChange={txtCustomerMemory_Change}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography color=\"error\">{validationError}</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            id=\"SubmitPLU\"\r\n            onClick={btnSubmitPLU_Click}\r\n            m={5}\r\n          >\r\n            Submit PLU\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={btnSubmitCustomer_Click}\r\n            m={5}\r\n          >\r\n            Submit Customer\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import \"date-fns\";\r\nimport React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function LinkStoreToUser() {\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date(new Date().setFullYear(new Date().getFullYear() + 1))\r\n  );\r\n  const [storeid, setStoreId] = useState(\"\");\r\n  const [userid, setUserId] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  let [errValidation, setErrValidation] = useState(\"\");\r\n  let history = useHistory();\r\n  let [errstoreid, setErrStoreId] = useState(false);\r\n  let [erruserid, setErrUserId] = useState(false);\r\n\r\n  const txtStoreId_Change = (e) => {\r\n    setStoreId(e.target.value);\r\n    setErrStoreId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  const txtUserId_Change = (e) => {\r\n    setUserId(e.target.value);\r\n    setErrUserId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  async function btnSubmit_Click() {\r\n    if (userid > 10000 || userid < 1) {\r\n      setErrValidation(\"User ID is out of range\");\r\n    } else if (storeid > 10000 || storeid < 1) {\r\n      setErrValidation(\"Store ID is out of range\");\r\n    } else {\r\n      setLoading(true);\r\n      let res = await ApiComms.LinkUserToStore(userid, storeid);\r\n      setLoading(false);\r\n      console.log(res);\r\n      let myMessage = \"Failed !!!!!\";\r\n\r\n      if (res !== null && res.resultcode === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-start\"\r\n        spacing={5}\r\n      >\r\n        <Grid item xs={4}>\r\n          {loading && <ProgressBar />}\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            required\r\n            id=\"txtStoreId\"\r\n            label=\"Store Id\"\r\n            onChange={txtStoreId_Change}\r\n            fullWidth\r\n            type=\"number\"\r\n            error={errstoreid}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            required\r\n            id=\"txtUserId\"\r\n            label=\"User Id\"\r\n            onChange={txtUserId_Change}\r\n            fullWidth\r\n            type=\"number\"\r\n            error={erruserid}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography color=\"error\">{errValidation}</Typography>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Grid container direction=\"row-reverse\">\r\n            <Grid item xs={6}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                onClick={btnSubmit_Click}\r\n                m={12}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function LooseLink() {\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date(new Date().setFullYear(new Date().getFullYear() + 1))\r\n  );\r\n  const [storeid, setStoreId] = useState(\"\");\r\n  const [userid, setUserId] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  let [errValidation, setErrValidation] = useState(\"\");\r\n  let history = useHistory();\r\n  let [errstoreid, setErrStoreId] = useState(false);\r\n  let [erruserid, setErrUserId] = useState(false);\r\n\r\n  const txtStoreId_Change = (e) => {\r\n    setStoreId(e.target.value);\r\n    setErrStoreId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  const txtUserId_Change = (e) => {\r\n    setUserId(e.target.value);\r\n    setErrUserId(e.target.value > 10000 || e.target.value < 1);\r\n  };\r\n\r\n  async function btnSubmit_Click() {\r\n    if (userid > 10000 || userid < 1) {\r\n      setErrValidation(\"User ID is out of range\");\r\n    } else if (storeid > 10000 || storeid < 1) {\r\n      setErrValidation(\"Store ID is out of range\");\r\n    } else {\r\n      setLoading(true);\r\n      let res = await ApiComms.LooseLink(userid, storeid);\r\n      setLoading(false);\r\n      console.log(res);\r\n      let myMessage = \"Failed !!!!!\";\r\n\r\n      if (res !== null && res.resultcode === 0) {\r\n        myMessage = \"Successful ;)\";\r\n      }\r\n      history.push({\r\n        pathname: \"/home\",\r\n        message: myMessage,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n        alignItems=\"flex-start\"\r\n        spacing={5}\r\n      >\r\n        <Grid item xs={4}>\r\n          {loading && <ProgressBar />}\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            required\r\n            id=\"txtStoreId\"\r\n            label=\"Store Id\"\r\n            onChange={txtStoreId_Change}\r\n            fullWidth\r\n            type=\"number\"\r\n            error={errstoreid}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            required\r\n            id=\"txtUserId\"\r\n            label=\"User Id\"\r\n            onChange={txtUserId_Change}\r\n            fullWidth\r\n            type=\"number\"\r\n            error={erruserid}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography color=\"error\">{errValidation}</Typography>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Grid container direction=\"row-reverse\">\r\n            <Grid item xs={6}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                onClick={btnSubmit_Click}\r\n                m={12}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ApiComms from \"../Utils/ApiComms\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\nimport MemoryIcon from \"@material-ui/icons/Memory\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  Link,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport UserList from \"./UserList\";\r\nimport AddUser from \"./AddUser\";\r\nimport EditUser from \"./EditUser\";\r\nimport ActivateUser from \"./ActivateUser\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport StoreList from \"./StoreList\";\r\nimport EditStore from \"./EditStore\";\r\nimport SetExpiryDate from \"./SetExpiryDate\";\r\nimport AllocateMemory from \"./AllocateMemory\";\r\nimport ResultPage from \"./ResultPage\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LinkStoreToUser from \"./LinkStoreToUser\";\r\nimport LooseLink from \"./LooseLink\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"lightblue\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nconst listItemList = [\r\n  { key: \"home\", value: \"Home\" },\r\n  { key: \"userlist\", value: \"User List\" },\r\n  { key: \"adduser\", value: \"Add User\" },\r\n  { key: \"edituser\", value: \"Edit User\" },\r\n  { key: \"changepassword\", value: \"Change Password\" },\r\n  { key: \"activateuser\", value: \"Activate User\" },\r\n  { key: \"storelist\", value: \"Store List\" },\r\n  { key: \"editstore\", value: \"Edit Store\" },\r\n  { key: \"setexpirydate\", value: \"Set Expiry Date\" },\r\n  { key: \"allocatememory\", value: \"Allocate Memory\" },\r\n  { key: \"linkstoretouser\", value: \"Link Store to User\" },\r\n  { key: \"looselink\", value: \"Loose Link\" },\r\n];\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(true);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [message, setMessage] = useState(props.message);\r\n  let { path, url } = useRouteMatch();\r\n  let history = useHistory();\r\n\r\n  // let location = React.useLocation();\r\n  let location = useLocation();\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n    console.log(path);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function LayTileText() {\r\n    let retVal = \"\";\r\n    try {\r\n      retVal = listItemList.find(\r\n        (element) => element.key === location.pathname.split(\"/\").reverse()[0]\r\n      ).value;\r\n    } catch (e) {\r\n      retVal = \"\";\r\n    }\r\n    return retVal;\r\n  }\r\n\r\n  async function btnLogout_Click() {\r\n    //   console.log(props.user);\r\n    let res = await ApiComms.LogoutUser(props.user ? props.user.id : 0);\r\n    //   console.log(res);\r\n    if (res !== null && res.resultcode === 0) {\r\n      console.log(\"logout success!\");\r\n      props.RaiseUserLoginEvent();\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (typeof location.message !== \"undefined\") {\r\n      setMessage(location.message);\r\n      console.log(location.message);\r\n    } else {\r\n      //     setMessage(\"\");\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTitle(LayTileText());\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"left\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h8\"\r\n            align=\"right\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            (Hi {props.user ? props.user.fname : \"\"})\r\n          </Typography>\r\n\r\n          <Button color=\"inherit\" onClick={btnLogout_Click}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <Typography variant=\"h6\" color=\"secondary\">\r\n            EC Touch Admin\r\n          </Typography>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        {/* <Typography align=\"left\">sfgsdfgs</Typography> */}\r\n\r\n        <Divider />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            key={listItemList[1].key}\r\n            component={Link}\r\n            to={`${url}/userlist`}\r\n          >\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[1].value} />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            key={listItemList[2].key}\r\n            component={Link}\r\n            to={`${url}/adduser`}\r\n          >\r\n            <ListItemIcon>\r\n              <PersonAddIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[2].value} />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            key={listItemList[3].key}\r\n            component={Link}\r\n            to={`${url}/edituser`}\r\n          >\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[3].value} />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            key={listItemList[4].key}\r\n            component={Link}\r\n            to={`${url}/changepassword`}\r\n          >\r\n            <ListItemIcon>\r\n              <VpnKeyIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[4].value} />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            key={listItemList[5].key}\r\n            component={Link}\r\n            to={`${url}/activateuser`}\r\n          >\r\n            <ListItemIcon>\r\n              <BlockIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[5].value} />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem\r\n            button\r\n            key={listItemList[6].key}\r\n            component={Link}\r\n            to={`${url}/storelist`}\r\n          >\r\n            <ListItemIcon>\r\n              <StoreIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[6].value} />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            key={listItemList[7].key}\r\n            component={Link}\r\n            to={`${url}/editstore`}\r\n          >\r\n            <ListItemIcon>\r\n              <EditIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[7].value} />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            key={listItemList[8].key}\r\n            component={Link}\r\n            to={`${url}/setexpirydate`}\r\n          >\r\n            <ListItemIcon>\r\n              <EventIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[8].value} />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            key={listItemList[9].key}\r\n            component={Link}\r\n            to={`${url}/allocatememory`}\r\n          >\r\n            <ListItemIcon>\r\n              <MemoryIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[9].value} />\r\n          </ListItem>\r\n\r\n          <Divider />\r\n\r\n          <ListItem\r\n            button\r\n            key={listItemList[10].key}\r\n            component={Link}\r\n            to={`${url}/linkstoretouser`}\r\n          >\r\n            <ListItemIcon>\r\n              <LinkIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[10].value} />\r\n          </ListItem>\r\n\r\n          <ListItem\r\n            button\r\n            key={listItemList[11].key}\r\n            component={Link}\r\n            to={`${url}/looselink`}\r\n          >\r\n            <ListItemIcon>\r\n              <LinkIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={listItemList[11].value} />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <Switch>\r\n          <Route exact path={path}>\r\n            <ResultPage message={message} />\r\n          </Route>\r\n          <Route path={`${path}/userlist`}>\r\n            <UserList />\r\n          </Route>\r\n          <Route path={`${path}/adduser`}>\r\n            <AddUser />\r\n          </Route>\r\n          <Route path={`${path}/edituser`}>\r\n            <EditUser />\r\n          </Route>\r\n          <Route path={`${path}/changepassword`}>\r\n            <ChangePassword />\r\n          </Route>\r\n          <Route path={`${path}/activateuser`}>\r\n            <ActivateUser />\r\n          </Route>\r\n\r\n          <Route path={`${path}/storelist`}>\r\n            <StoreList />\r\n          </Route>\r\n          <Route path={`${path}/editstore`}>\r\n            <EditStore />\r\n          </Route>\r\n          <Route path={`${path}/setexpirydate`}>\r\n            <SetExpiryDate />\r\n          </Route>\r\n          <Route path={`${path}/allocatememory`}>\r\n            <AllocateMemory />\r\n          </Route>\r\n          <Route path={`${path}/linkstoretouser`}>\r\n            <LinkStoreToUser />\r\n          </Route>\r\n          <Route path={`${path}/looselink`}>\r\n            <LooseLink />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst useStateObjectWithLocalStorage = (localStorageKey) => {\r\n  const [value, setValue] = React.useState(\r\n    JSON.parse(localStorage.getItem(localStorageKey))\r\n  );\r\n  React.useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(value));\r\n  }, [value]);\r\n  return [value, setValue];\r\n};\r\n\r\nconst useStateWithLocalStorage = (localStorageKey) => {\r\n  const [value, setValue] = React.useState(\r\n    localStorage.getItem(localStorageKey) || \"\"\r\n  );\r\n  React.useEffect(() => {\r\n    localStorage.setItem(localStorageKey, value);\r\n  }, [value]);\r\n  return [value, setValue];\r\n};\r\n\r\nexport default { useStateWithLocalStorage, useStateObjectWithLocalStorage };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./Components/SignUp\";\r\n//import SignUp from \"./Components/SignUp\";\r\nimport SignInSide from \"./Components/SignIn\";\r\nimport { Route, Switch, useHistory, Redirect } from \"react-router-dom\";\r\n// import Dashboard from \"./Components/Dashboard\";\r\nimport Home from \"./Components/Home\";\r\nimport MyHooks from \"./Utils/MyHooks\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = MyHooks.useStateObjectWithLocalStorage(\r\n    \"localStorageUser\"\r\n  );\r\n\r\n  //  const [message, setMessage] = useState(\"\");\r\n  var history = useHistory();\r\n\r\n  function OnUserLogin(oUser) {\r\n    console.log(\"state changed\");\r\n    setUser(oUser);\r\n  }\r\n\r\n  function OnUserLogout() {\r\n    setUser(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {user ? <Redirect to=\"/home\" /> : <Redirect to=\"/login\" />}\r\n        </Route>\r\n        <Route\r\n          exact\r\n          path=\"/login\"\r\n          render={(props) => (\r\n            <SignInSide {...props} RaiseUserLoginEvent={OnUserLogin} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/home\"\r\n          render={(props) => (\r\n            <Home\r\n              {...props}\r\n              message={user ? user.fname : \"\"}\r\n              user={user}\r\n              RaiseUserLoginEvent={OnUserLogout}\r\n            />\r\n          )}\r\n          //     component={Home} //{<Home />}\r\n          // {<Dashboard {...props} user={user} />}\r\n        />\r\n        {/* <Route exact path=\"*\" component={() => \"page not found\"} /> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}